[project]
name = "claude-automation-system"
version = "2.0.0"
description = "Modern CLAUDE.md automation system with template-based generation"
requires-python = ">=3.13"
dependencies = [
    "jinja2>=3.1.2",
    "pydantic>=2.5.0",
    "pytest>=7.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["claude_automation"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'
exclude = '''
/(
    \.devenv
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | __pycache__
  | result
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
exclude = [
    ".devenv",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "result",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]